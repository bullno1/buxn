#!/bin/sh -e

main() {
	export BUILD_TYPE=${1:-Debug}
	export PLATFORM=${2:-linux}
	export OBJ_DIR=".build/$PLATFORM/$BUILD_TYPE"
	export BIN_DIR="bin/$PLATFORM/$BUILD_TYPE"

	rm -f .build/commands
	mkdir -p .build
	mkdir -p $BIN_DIR

	if [ -t 1 ]
	then
		PARALLEL_FLAGS="--bar"
	else
		PARALLEL_FLAGS="--progress"
	fi

	build_$PLATFORM
}

build_linux() {
	export CC=clang
	export CXX=clang++

	COMMON_FLAGS="-Wall -Wextra -pedantic -Werror"
	Release="-O3 -flto"
	Debug="-g -fsanitize=undefined,address"
	eval "BUILD_TYPE_FLAGS=\${$BUILD_TYPE}"

	export COMPILE_FLAGS="${COMMON_FLAGS} ${BUILD_TYPE_FLAGS}"

	compile_common
	cat .build/commands | parallel $PARALLEL_FLAGS --max-procs $(nproc)
	echo "Linking..."
	$CXX \
		-fuse-ld=mold \
		-Wl,--separate-debug-file \
		${BUILD_TYPE_FLAGS} \
		${OBJ_DIR}/src/{cli.c.o,vm.c.o} \
		${OBJ_DIR}/src/devices/{stdio_console.c.o,system.c.o,datetime.c.o} \
		-o ${BIN_DIR}/buxn-cli
	echo "Done"
}

build_cosmo() {
	if ! command -v cosmocc > /dev/null
	then
		echo "You need to add cosmopolitan toolchain to your path:"
		echo "export PATH=\$PATH:<path-to-cosmopolitan>/bin"
		exit 1
	fi

	COSMO_HOME=$(dirname $(dirname $(which cosmocc)))

	export CC=cosmocc
	export CXX=cosmoc++

	COMMON_FLAGS="-Wall -Wextra -pedantic -Werror -mtiny -mclang"
	Release="-O3"
	Debug="-mdbg"
	eval "BUILD_TYPE_FLAGS=\${$BUILD_TYPE}"

	export COMPILE_FLAGS="${COMMON_FLAGS} ${BUILD_TYPE_FLAGS}"

	compile_common
	cat .build/commands | parallel $PARALLEL_FLAGS --max-procs $(nproc)
	echo "Linking..."
	$CXX \
		${BUILD_TYPE_FLAGS} \
		${OBJ_DIR}/src/{cli.c.o,vm.c.o} \
		${OBJ_DIR}/src/devices/{stdio_console.c.o,system.c.o,datetime.c.o} \
		-o ${BIN_DIR}/buxn-cli
	echo "Done"
}

compile_common() {
	compile src/cli.c $COMPILE_FLAGS
	compile src/vm.c $COMPILE_FLAGS
	compile src/devices/stdio_console.c $COMPILE_FLAGS
	compile src/devices/system.c $COMPILE_FLAGS
	compile src/devices/datetime.c $COMPILE_FLAGS
}

compile() {
	echo ./compile "$@" >> .build/commands
}

main $@
